name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    branches: [main]
    types: 
      - completed

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch enough history to compare with previous commit
          fetch-depth: 2
          ref: ${{ github.event.workflow_run.head_sha }}
      
      - uses: pnpm/action-setup@v4
          
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org/'
          cache: 'pnpm'
          
      - name: Check for version changes in package.json
        id: check_changes
        run: |
          # Get the commit SHA from the triggering workflow
          COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
          echo "Checking for version changes in commit: $COMMIT_SHA"
          
          # Check if we have a previous commit to compare against
          if ! git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
            echo "No previous commit found (possibly first commit), skipping publish."
            echo "publish=false" >> $GITHUB_OUTPUT
          else
            # Check if package.json file exists and has changes
            if ! git show HEAD~1:apps/drizzle-service/package.json >/dev/null 2>&1; then
              echo "package.json didn't exist in previous commit, proceeding with publish."
              echo "publish=true" >> $GITHUB_OUTPUT
            else
              # Extract current and previous versions
              CURRENT_VERSION=$(cat apps/drizzle-service/package.json | grep '"version":' | cut -d'"' -f4)
              PREVIOUS_VERSION=$(git show HEAD~1:apps/drizzle-service/package.json | grep '"version":' | cut -d'"' -f4)
              
              echo "Current version: $CURRENT_VERSION"
              echo "Previous version: $PREVIOUS_VERSION"
              
              if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
                echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION, proceeding with publish."
                echo "publish=true" >> $GITHUB_OUTPUT
              else
                echo "No version change detected ($CURRENT_VERSION), skipping publish."
                echo "publish=false" >> $GITHUB_OUTPUT
              fi
            fi
          fi
          
      - name: Publish package
        if: steps.check_changes.outputs.publish == 'true'
        working-directory: apps/drizzle-service
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          pnpm install --frozen-lockfile
          pnpm build
          pnpm publish --access public --no-git-checks
